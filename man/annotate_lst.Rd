% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/annotate.R
\name{annotate_lst}
\alias{annotate_lst}
\alias{annotate_df}
\alias{annotate_chr}
\title{Annotation}
\usage{
annotate_lst(data, labels_as_names = TRUE, all_names = TRUE)

annotate_df(data, all_names = TRUE, add_type = TRUE)

annotate_chr(data, labels_as_names = TRUE, all_names = TRUE)
}
\arguments{
\item{data}{a data.frame with labelled columns}

\item{labels_as_names}{a logical value. If \code{TRUE}, then the returned
object will use labels as names and variable as values. If \code{FALSE},
variables will be used as names and labels will be values.}

\item{all_names}{a logical value. If \code{TRUE}, then the returned
object will have length equal to the number of columns in \code{data}
and will include variable - label pairs even if variables do
not have labels. If \code{FALSE}, then the returned object will
only include variables that have labels and will have length
equal to the number of labelled columns in \code{data}.}

\item{add_type}{a logical value. If \code{TRUE}, then the returned
\code{tibble} will include a column named \code{type} that describes
the type of each variable annotated. If \code{FALSE}, no \code{type} column
is added.}
}
\value{
\itemize{
\item \code{annotate_lst} returns a list
\item \code{annotate_chr} returns a character vector
\item \code{annotate_df} returns a \link[tibble:tibble-package]{tibble}
}
}
\description{
Working with labels in R is a little tricky. Sometimes
functions preserve vector attributes, sometimes they don't. Generally,
it's safer to make a separate object that preserves data labels while
you run whatever functions you need to run on the actual data. Using
annotate should make this easier.
}
\examples{

# make some data to demonstrate function behavior
demo_data <- data.frame(a = 1, b = 2, c = 'unmet expectations')

# add labels to the data
attr(demo_data$a, 'label') <- 'age, years'
attr(demo_data$b, 'label') <- 'sex at birth'
attr(demo_data$c, 'label') <-  NULL
# that darn c is always a rule breaker

# include all the columns
annotate_df(demo_data, all_names = TRUE)
# include only labelled columns
annotate_df(demo_data, all_names = FALSE)

# swap the name/value role of labels
# this matters if you want to splice labels into
# dplyr::rename or dplyr::recode
annotate_chr(demo_data, labels_as_names = TRUE)
annotate_chr(demo_data, labels_as_names = FALSE)

# returns a list if you don't provide a suffix
annotate_lst(demo_data, labels_as_names = TRUE)
annotate_lst(demo_data, labels_as_names = FALSE)

annotate_df(iris)


}
