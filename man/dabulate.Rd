% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dabulate.R
\name{dabulate}
\alias{dabulate}
\title{Data tabulation}
\usage{
dabulate(data, ..., names_sep = "_", include_overall = TRUE)
}
\arguments{
\item{data}{a data frame to tabulate.}

\item{...}{a collection of named arguments with left hand side
giving the name of the summarized value and right hand side
giving an expression to be applied in \code{data}.}

\item{names_sep}{a character value that will be used to separate
the names of groups in column names of the output. If there is
only one group, this parameter has no impact.}

\item{include_overall}{a logical value. If \code{TRUE}, then the
output will include a column named \code{'Overall'} that replicates
the functions supplied in \code{...} in the entire sample.}
}
\value{
a \link[tibble:tibble-package]{tibble}
}
\description{
Tabulating a data frame leads to a summary
frame with rows that correspond to columns of the original
data. Different functions can be applied to the same variable
to create a set of summaries (see examples).
}
\examples{

library(flextable)
library(dplyr)

iris \%>\%
  group_by(Species) \%>\%
  dabulate(
    `Sepal length` = smry_meanSD(Sepal.Length),
    `Sepal length` = smry_medianIQR(Sepal.Length),
    `Sepal width`  = smry_meanSD(Sepal.Width),
    `Sepal width`  = smry_medianIQR(Sepal.Width)
  ) \%>\%
  group_by(variable) \%>\%
  as_grouped_ft() \%>\%
  theme_vanilla() \%>\%
  align_lc() \%>\%
  autofit() \%>\%
  pad_groups()
}
